// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  email     String @unique
  username  String
  profileUrl String
  role       Role      @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  trips     Trip[]
}

enum Role {
  ADMIN
  AGENT
  USER
}

model ImageUrl {
  id        Int    @id @default(autoincrement())
  url       String
  publicId  String
  tripId    Int
  trip      Trip   @relation(fields: [tripId], references: [id])
}

model Trip {
  id               Int          @id @default(autoincrement())
  userId           Int
  user             User         @relation(fields: [userId], references: [id])
  name             String
  description      String
  estimatedPrice   String
  duration         Int
  budget           String
  travelStyle      String
  interests        String
  groupType        String
  country          String
  bestTimeToVisit  String[]
  weatherInfo      String[]
  payment_link     String
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt

  locationId       Int?         @unique
  location         Location?    @relation(fields: [locationId], references: [id])

  images           ImageUrl[]   // ðŸ‘ˆ one-to-many relation to images
  itinerary        DayPlan[]
}

model DayPlan {
  id         Int        @id @default(autoincrement())
  day        Int
  location   String
  trip       Trip       @relation(fields: [tripId], references: [id])
  tripId     Int
  activities Activity[]
}

model Activity {
  id          Int      @id @default(autoincrement())
  time        String
  description String
  dayPlan     DayPlan  @relation(fields: [dayPlanId], references: [id])
  dayPlanId   Int
}

model Location {
  id            Int      @id @default(autoincrement())
  city          String
  latitude      Float
  longitude     Float
  openStreetMap String
  trip          Trip?
}